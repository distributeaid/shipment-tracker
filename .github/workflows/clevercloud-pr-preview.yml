name: PR-preview
#  This action creates an instance on Clever Cloud for all PRs that have the
#  "cc-preview" label

on:
  pull_request:

env:
  CLEVER_TOKEN: ${{ secrets.CLEVER_TOKEN }}
  CLEVER_SECRET: ${{ secrets.CLEVER_SECRET }}
  PREVIEW_DOMAIN: stp.distributeaid.dev

jobs:
  app:
    if: contains(github.event.pull_request.labels.*.name, 'cc-preview')
    environment: cc-preview
    runs-on: ubuntu-latest
    name: Create the app name and check of app already exists
    outputs:
      name: ${{ steps.name.outputs.name }}
      exists: ${{ steps.exists.outputs.exists }}
      url: ${{ steps.url.outputs.url }}
      hostname: ${{ steps.hostname.outputs.hostname }}
    steps:
      - uses: actions/checkout@v2

      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16.x'

      - uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Install NPM packages
        run: yarn install --frozen-lockfile

      - name: Set app name
        id: name
        run: echo "::set-output name=name::shipment-tracker-pr${{ github.event.pull_request.number }}"

      - name: Check if preview exists
        id: exists
        run: |
          npx clever link -o ${{ secrets.CLEVER_ORG }} ${{ steps.name.outputs.name }} \
          && echo "::set-output name=exists::true" \
          || echo "::set-output name=exists::false"

      - name: Set preview hostname
        id: hostname
        run: echo "::set-output name=hostname::pr${{ github.event.pull_request.number }}.${{ env.PREVIEW_DOMAIN }}"

      - name: Set preview URL
        id: url
        run: echo "::set-output name=url::https://${{ steps.hostname.outputs.hostname }}/"

  create:
    if: contains(github.event.pull_request.labels.*.name, 'cc-preview') && needs.app.outputs.exists == 'false'
    runs-on: ubuntu-latest
    environment: cc-preview
    name: Create preview instance
    needs:
      - app
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # Needed for deploy

      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16.x'

      - uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Install NPM packages
        run: yarn install --frozen-lockfile

      - name: Create the application
        run: npx clever create -t node -o ${{ secrets.CLEVER_ORG }} ${{ needs.app.outputs.name }}

      - name: Enable dedicated build instance
        run: npx clever scale --build-flavor M

      - name: Force HTTPs
        run: npx clever config set force-https true

      - name: Configure Node.js application settings
        run: |
          npx clever env set CC_NODE_DEV_DEPENDENCIES install
          npx clever env set CC_POST_BUILD_HOOK 'yarn run prod:build && ./.clevercloud/publish-frontend-to-cellar.sh'
          npx clever env set CC_RUN_COMMAND 'yarn run prod:server'
          npx clever env set DB_ENV clevercloud
          npx clever env set NODE_ENV production
          npx clever env set ORIGIN ${{ needs.app.outputs.url }}

      - name: Configure frontend settings
        run: |
          npx clever env set CELLAR_BUCKET ${{ needs.app.outputs.hostname }}
          npx clever env set REACT_APP_SERVER_URL https://`npx clever domain | tr -d ' \n'`

      - name: Configure email settings
        run: |
          npx clever env set SMTP_FROM ${{ secrets.SMTP_FROM }} # e.g. notification@shipment-tracker.distributeaid.dev
          npx clever env set SMTP_USER ${{ secrets.SMTP_USER }}
          npx clever env set SMTP_PASSWORD ${{ secrets.SMTP_PASSWORD }}
          npx clever env set SMTP_PORT ${{ secrets.SMTP_PORT }} # e.g. 587
          npx clever env set SMTP_SECURE ${{ secrets.SMTP_SECURE }} # e.g. false
          npx clever env set SMTP_SERVER ${{ secrets.SMTP_SERVER }} # e.g. relay-de.smtp.net

      - name: Create PostgreSQL addon
        run: npx clever addon create --link ${{ needs.app.outputs.name }} postgresql-addon ${{ needs.app.outputs.name }}-db

      - name: Create Cellar addon
        run: npx clever addon create --link ${{ needs.app.outputs.name }} -p S cellar-addon ${{ needs.app.outputs.name }}-frontend

      - name: Create Cellar bucket
        run: |
          pip install --upgrade --user 'awscli<2.0.0'
          export `npx clever env -a ${{ needs.app.outputs.name }} | grep CELLAR_ADDON_KEY_ID | sed 's/CELLAR_ADDON_KEY_ID/AWS_ACCESS_KEY_ID/' | tr -d '"'`
          export `npx clever env -a ${{ needs.app.outputs.name }} | grep CELLAR_ADDON_KEY_SECRET | sed 's/CELLAR_ADDON_KEY_SECRET/AWS_SECRET_ACCESS_KEY/' | tr -d '"'`
          aws s3api create-bucket --bucket ${{ needs.app.outputs.hostname }} --acl public-read --endpoint-url https://cellar-c2.services.clever-cloud.com

      - name: Deploy the application
        run: npx clever deploy

      - name: Add comment with preview URL to PR
        run: |
          curl \
            -X POST \
            ${{ github.event.pull_request.comments_url }} \
            -H "Content-Type: application/json" \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            --data '{ "body": "Preview available on ${{ needs.app.outputs.url }}" }'

  update:
    if: contains(github.event.pull_request.labels.*.name, 'cc-preview') && needs.app.outputs.exists == 'true'
    runs-on: ubuntu-latest
    environment: cc-preview
    name: Update preview instance
    needs:
      - app
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # Needed for deploy

      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16.x'

      - uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Install NPM packages
        run: yarn install --frozen-lockfile

      - name: Link application
        run: npx clever link -o ${{ secrets.CLEVER_ORG }} ${{ needs.app.outputs.name }}

      - name: Deploy the application
        run: npx clever deploy

      - name: Add comment with preview URL to PR
        run: |
          curl \
            -X POST \
            ${{ github.event.pull_request.comments_url }} \
            -H "Content-Type: application/json" \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            --data '{ "body": "Preview updated on ${{ needs.app.outputs.url }}" }'
