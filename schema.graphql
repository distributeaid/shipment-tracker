scalar Date
scalar DateTime
scalar Currency

type Location {
  country: Country
  townCity: String!
  openLocationCode: String
}

type ContactInfo {
  name: String!
  email: String
  phone: String
  signal: String
  whatsApp: String
}

input LocationInput {
  country: ID
  townCity: String!
  openLocationCode: String
}

input ContactInfoInput {
  name: String!
  email: String
  phone: String
  signal: String
  whatsApp: String
}

type Group {
  id: Int!
  name: String!
  description: String
  groupType: GroupType!
  primaryLocation: Location!
  primaryContact: ContactInfo!
  website: String
  captainId: Int!
  createdAt: DateTime!
  updatedAt: DateTime!
}

input GroupCreateInput {
  name: String!
  description: String
  groupType: GroupType!
  primaryLocation: LocationInput!
  primaryContact: ContactInfoInput!
  website: String
}

input GroupUpdateInput {
  name: String
  description: String
  groupType: GroupType
  primaryLocation: LocationInput
  primaryContact: ContactInfoInput
  website: String
  captainId: Int
}

input ShipmentUpdateInput {
  shipmentRoute: ID
  labelYear: Int
  labelMonth: Int
  sendingHubs: [Int!]
  receivingHubs: [Int!]
  status: ShipmentStatus
  pricing: ShipmentPricingInput
}

type Query {
  group(id: Int!): Group!

  listGroups(groupType: [GroupType!], captainId: Int): [Group!]!

  shipmentRoutes: [ShipmentRoute!]!

  shipment(id: Int!): Shipment!
  listShipments(status: [ShipmentStatus!]): [Shipment!]!

  offer(id: Int!): Offer!
  listOffers(shipmentId: Int!): [Offer!]!

  pallet(id: Int!): Pallet!

  lineItem(id: Int!): LineItem!

  listShipmentExports(shipmentId: Int!): [ShipmentExport!]!

  countries: [Country!]!
}

type Mutation {
  addGroup(input: GroupCreateInput!): Group!
  updateGroup(id: Int!, input: GroupUpdateInput!): Group!

  addShipment(input: ShipmentCreateInput!): Shipment!
  updateShipment(id: Int!, input: ShipmentUpdateInput!): Shipment!

  addOffer(input: OfferCreateInput!): Offer!
  updateOffer(input: OfferUpdateInput!): Offer!

  addPallet(input: PalletCreateInput!): Pallet!
  updatePallet(id: Int!, input: PalletUpdateInput!): Pallet!
  destroyPallet(id: Int!): Boolean!
  addLineItem(palletId: Int!): LineItem!
  updateLineItem(id: Int!, input: LineItemUpdateInput!): LineItem!
  destroyLineItem(id: Int!): Boolean!
  moveLineItem(id: Int!, targetPalletId: Int!): LineItem!

  exportShipment(shipmentId: Int!): ShipmentExport!
}

input ShipmentCreateInput {
  shipmentRoute: ID!
  labelYear: Int!
  labelMonth: Int!
  sendingHubs: [Int!]!
  receivingHubs: [Int!]!
  status: ShipmentStatus!
  pricing: ShipmentPricingInput
}

type Country {
  countrycode: ID!
  shortName: String!
  alias: String
}

type Region {
  country: Country!
  region: String
}

type ShipmentRoute {
  id: ID!
  from: Region!
  to: Region!
}

enum ShipmentStatus {
  DRAFT
  ANNOUNCED
  OPEN
  AID_MATCHING
  STAGING
  IN_PROGRESS
  COMPLETE
  ABANDONED
  ARCHIVED
}

type Shipment {
  id: Int!
  shipmentRoute: ShipmentRoute!
  # label{year,month} are for identification purposes only e.g. for deriving
  # display names like "UK-2021-03".
  labelYear: Int!
  labelMonth: Int!
  offerSubmissionDeadline: Date
  status: ShipmentStatus!
  sendingHubs: [Group!]!
  receivingHubs: [Group!]!
  pricing: ShipmentPricing

  # Exports are forbidden to non-admins
  exports: [ShipmentExport!]

  # default to created
  statusChangeTime: DateTime!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type ShipmentPricing {
  singlePallet: MoneyAmount
  halfPallet: MoneyAmount
}

input ShipmentPricingInput {
  singlePallet: MoneyAmountInput
  halfPallet: MoneyAmountInput
}

type MoneyAmount {
  # Currency is a string holding an ISO-4217 currency code
  currency: Currency!
  quantityInMinorUnits: Int!
}

input MoneyAmountInput {
  # Currency is a string holding an ISO-4217 currency code
  currency: Currency!
  quantityInMinorUnits: Int!
}

enum GroupType {
  REGULAR
  DA_HUB
}

type UserProfile {
  id: Int!
  isAdmin: Boolean!
  name: String!
  group: Group
}

enum OfferStatus {
  DRAFT
  PROPOSED
  BEING_REVIEWED
  REJECTED
  ACCEPTED
}

type Offer {
  id: Int!
  status: OfferStatus!
  shipmentId: Int!
  sendingGroupId: Int!

  # if null contact is group default
  contact: ContactInfo

  photoUris: [String!]!
  pallets: [Pallet!]!

  statusChangeTime: DateTime!
  updatedAt: DateTime!
  createdAt: DateTime!
}

input OfferCreateInput {
  sendingGroupId: Int!
  shipmentId: Int!
  contact: ContactInfoInput
  photoUris: [String!]
}

input OfferUpdateInput {
  id: Int!
  status: OfferStatus
  contact: ContactInfoInput
  photoUris: [String!]
}

enum PalletType {
  STANDARD
  EURO
  CUSTOM
}

enum PaymentStatus {
  WONT_PAY
  UNINITIATED
  INVOICED
  PAID
}

type Pallet {
  id: Int!
  offerId: Int!
  palletType: PalletType!
  lineItems: [LineItem!]!
  paymentStatus: PaymentStatus!
  paymentStatusChangeTime: DateTime!
  createdAt: DateTime!
  updatedAt: DateTime!
}

input PalletCreateInput {
  offerId: Int!
  palletType: PalletType!
}

input PalletUpdateInput {
  paymentStatus: PaymentStatus
  palletType: PalletType
}

enum LineItemStatus {
  PROPOSED
  AWAITING_APPROVAL
  ACCEPTED
  NOT_ACCEPTED
}

enum LineItemCategory {
  UNSET
  CLOTHING
  SHELTER
  HYGIENE
  FOOD
  GAMES
  ELECTRONICS
  MEDICAL
  PPE
  OTHER
}

enum DangerousGoods {
  FLAMMABLE
  EXPLOSIVE
  MEDICINE
  BATTERIES
  LIQUIDS
  OTHER
}

enum LineItemContainerType {
  UNSET
  BULK_BAG
  BOX
  FULL_PALLET
}

type LineItem {
  id: Int!
  offerPalletId: Int!
  status: LineItemStatus!
  proposedReceivingGroupId: Int
  proposedReceivingGroup: Group
  acceptedReceivingGroupId: Int
  acceptedReceivingGroup: Group
  containerType: LineItemContainerType!
  category: LineItemCategory!
  description: String
  itemCount: Int!
  containerCount: Int
  containerWeightGrams: Int
  containerLengthCm: Int
  containerWidthCm: Int
  containerHeightCm: Int
  affirmLiability: Boolean!
  tosAccepted: Boolean!
  dangerousGoods: [DangerousGoods!]!
  photoUris: [String!]!
  sendingHubDeliveryDate: Date
  statusChangeTime: DateTime!
  createdAt: DateTime!
  updatedAt: DateTime!
}

input LineItemUpdateInput {
  status: LineItemStatus
  proposedReceivingGroupId: Int
  acceptedReceivingGroupId: Int
  containerType: LineItemContainerType
  category: LineItemCategory
  description: String
  itemCount: Int
  containerCount: Int
  containerWeightGrams: Int
  containerLengthCm: Int
  containerWidthCm: Int
  containerHeightCm: Int
  affirmLiability: Boolean
  tosAccepted: Boolean
  dangerousGoods: [DangerousGoods!]
  photoUris: [String!]
  sendingHubDeliveryDate: Date
}

type ShipmentExport {
  id: Int!
  downloadPath: String!
  shipmentId: Int!
  createdBy: UserProfile!
  createdAt: DateTime!
}
